{"version":3,"sources":["screen.js","button.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["connect","state","console","log","count","counter","style","display","justifyContent","alignItems","backgroundColor","height","width","color","borderRadius","dispatch","increment","type","decrement","flexDirection","marginTop","onClick","marginRight","cursor","marginLeft","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","countReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MA2BeA,eAPS,SAACC,GAEvB,OADAC,QAAQC,IAAI,QAASF,GACd,CACLG,MAAOH,EAAMI,WAIFL,EAxBA,SAAC,GAAD,IAAGI,EAAH,EAAGA,MAAH,OACb,qBACEE,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,WACjBC,OAAQ,IACRC,MAAO,IACPC,MAAO,QACPC,aAAc,IATlB,SAYGV,OCyBUJ,cAAQ,MAPI,SAACe,GAC1B,MAAO,CACLC,UAAW,kBAAMD,EAAS,CAAEE,KAAM,eAClCC,UAAW,kBAAMH,EAAS,CAAEE,KAAM,kBAIvBjB,EAtCA,SAAC,GAAD,IAAGgB,EAAH,EAAGA,UAAWE,EAAd,EAAcA,UAAd,OACb,sBACEZ,MAAO,CACLC,QAAS,OACTY,cAAe,MACfX,eAAgB,GAChBY,UAAW,GACXT,OAAQ,IANZ,UASE,wBACEU,QAASL,EACTV,MAAO,CACLgB,YAAa,GACbC,OAAQ,WAJZ,uBASA,wBACEF,QAASH,EACTZ,MAAO,CACLkB,WAAY,GACZD,OAAQ,WAJZ,6BCDWE,MAlBf,WACE,OACE,sBACEnB,MAAO,CACLC,QAAS,OACTY,cAAe,SACfX,eAAgB,SAChBC,WAAY,SACZE,OAAQ,QACRC,MAAO,SAPX,UAUE,cAAC,EAAD,IACA,cAAC,EAAD,QCJSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCPRQ,EAAe,CACnB9B,QAAS,GAgBI+B,EAbM,WAAmC,IAAlCnC,EAAiC,uDAAzBkC,EAAcE,EAAW,uCAGrD,OAFAnC,QAAQC,IAAI,SAAUkC,GAEdA,EAAOpB,MACb,IAAK,YACH,MAAO,CAAEZ,QAASJ,EAAMI,QAAU,GACpC,IAAK,YACH,MAAO,CAAEA,QAASJ,EAAMI,QAAU,GACpC,QACE,OAAOJ,ICJPqC,EAAQC,YAAYH,GAE1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.f884afa7.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Screen = ({ count }) => (\n  <div\n    style={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"darkblue\",\n      height: 200,\n      width: 200,\n      color: \"white\",\n      borderRadius: 10,\n    }}\n  >\n    {count}\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  return {\n    count: state.counter,\n  };\n};\n\nexport default connect(mapStateToProps)(Screen);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Button = ({ increment, decrement }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"\",\n      marginTop: 20,\n      height: 30,\n    }}\n  >\n    <button\n      onClick={increment}\n      style={{\n        marginRight: 10,\n        cursor: \"pointer\",\n      }}\n    >\n      INCREMENT\n    </button>\n    <button\n      onClick={decrement}\n      style={{\n        marginLeft: 10,\n        cursor: \"pointer\",\n      }}\n    >\n      DECREMENT\n    </button>\n  </div>\n);\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"INCREMENT\" }),\n    decrement: () => dispatch({ type: \"DECREMENT\" }),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Button);\n","import Screen from \"./screen\";\nimport Button from \"./button\";\n\nfunction App() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        width: \"100vw\",\n      }}\n    >\n      <Screen />\n      <Button />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  counter: 0,\n};\n\nconst countReducer = (state = initialState, action) => {\n  console.log(\"action\", action);\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { counter: state.counter + 1 };\n    case \"DECREMENT\":\n      return { counter: state.counter - 1 };\n    default:\n      return state;\n  }\n};\n\nexport default countReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport countReducer from \"./reducer\";\n\nconst store = createStore(countReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}